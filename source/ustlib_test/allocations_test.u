//##success_test
import "../ustlib/memory.u"

fn nomangle main() : i32
{
	unsafe
	{
		// Should return nonzero reference.
		auto& r0= ust::memory_allocate( size_type(64) );
		halt if( ust::ref_to_int(r0) == size_type(0) );

		// Should reallocate with new size bigger, than previous
		auto& r1= ust::memory_reallocate( r0, size_type(128) );
		halt if( ust::ref_to_int(r1) == size_type(0) );

		// Should reallocate with new size less, than previous
		auto& r2= ust::memory_reallocate( cast_ref_unsafe</void/>( r1 ), size_type(32) );
		halt if( ust::ref_to_int(r2) == size_type(0) );

		ust::memory_free( r2 );
	}

	return 0;
}
