//##success_test
import "../ustlib/polymorph.u"

struct S{}

class I0 interface {}
class I1 interface {}
class A : I0, I1 { i32 x= 0; }
class B : A { i32 y= 0; }

fn U_Main() : i32
{
	{
		var i32 x= 0;
		var void &ref= x;
		halt if( ust::ref_to_int( ust::polymorph_restore_original_ref( ref ) ) != ust::ref_to_int(x) );
	}
	{
		var S s;
		var void &ref= s;
		halt if( ust::ref_to_int( ust::polymorph_restore_original_ref( ref ) ) != ust::ref_to_int(s) );
	}
	{
		var B b;
		var I0& i0= b;
		var I1& i1= b;
		var A& a= b;
		halt if( ust::ref_to_int( ust::polymorph_restore_original_ref( i0 ) ) != ust::ref_to_int(b) );
		halt if( ust::ref_to_int( ust::polymorph_restore_original_ref( i1 ) ) != ust::ref_to_int(b) );
		halt if( ust::ref_to_int( ust::polymorph_restore_original_ref( a  ) ) != ust::ref_to_int(b) );
		halt if( ust::ref_to_int( ust::polymorph_restore_original_ref( b  ) ) != ust::ref_to_int(b) );
	}
	return 0;
}
