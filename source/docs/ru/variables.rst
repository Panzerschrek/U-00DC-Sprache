Переменные
==========

Переменную можно объявить так:

.. code-block:: u_spr

   var i32 x= 0;

Можно объявить сразу несколько переменных одного типа:

.. code-block:: u_spr

   var i32 x= 0, y= 1, z= 2;

Модификаторы ссылки и изменяемости задаются индивидуально для каждой переменной:

.. code-block:: u_spr

   var i32 mut a= 0, imut b= 0;
   var i32 &mut a_ref= a, &imut b_ref= b, & b_ref2= b, imut y= 66, mut z= -56;

********
*Ссылки*
********
Модификатор ссылочности ``&`` указывает, что переменная будет являться ссылкой.
Это значит, что ссылочная переменная будет ссылаться на значение какой-то другой переменной.
Изменение ссылочной переменной приведёт к изменению исходной переменной.

Объявление ссылки не создаёт копию значения, что может быть полезно, когда создание копии есть тяжёлая операция.

**************
*Изменяемость*
**************
Переменная может иметь один из трёх модификаторов изменяемости:

* ``mut`` - переменную можно будет изменять после объявления
* ``imut`` - переменную нельзя будет изменять после изменения
* ``constexpr`` - переменная должна быть константой времени сборки

Если для переменной не указан никакой из модификаторов изменяемости, к ней будет применён модификатор ``imut``.

***************
*Инициализация*
***************
В примерах выше значения всех переменных инициализирующий при объявлении через ``=``.
Это не единственный способ инициализации, в зависимости от типа переменной к ней применимы различные виды инициализаторов, для переменных некоторых типов вообще можно не указывать инициализатор.
Более подробно про инициализацию читайте в :doc:`соответствующей главе </initializers>`.

.. _auto-variables:

*****************
*auto переменные*
*****************

Существует возможность объявить переменную, тип которой будет выведен из типа инициализатора.
Для этого существует специальный синтаксис - объявление ``auto`` переменной. Объявление состоит из ключевого слова ``auto``, опциональных модификаторов ссылочности и изменяемости, имени переменной и инициализатора после ``=``.

.. code-block:: u_spr

   auto x = 0; // Неизменяемая auto переменная. Тип будет равен "i32".
   auto mut y = 0.5f; // Изменяемая auto переменная. Тип будет равен "f32".
   
   auto &mut y_ref= y; // Неизменяемая auto ссылка. Тип будет равен "f32".
   auto &imut x_ref0= x; // Неизменяемая auto ссылка. Тип будет равен "i32".
   auto & x_ref0= x; // Неизменяемая auto ссылка. Неизменяемость выбрана неявно. Тип будет равен "i32".
   
   var [ bool, 16 ] arr= zero_init;
   auto& arr_ref= arr;// Неизменяемая auto ссылка. Тип будет равен "[ bool, 16 ]".
