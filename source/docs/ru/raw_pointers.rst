Сырые указатели
===============

В Ü существует тип сырых указателей, подобный (отчасти) таковому во многих низкоуровневых языках, таких, как Си.
В Ü сырые указатели синтаксически и функционально несколько отличаются от Си, но главный смысл всё же остаётся.

Сырые указатели предназначены для использования в низкоуровневом коде, таком как код контейнеров, код взаимодействия с другими языками и т. д.
Для указателей не работает проверка ссылок, поэтому операция рызыменования указателя дозволена только в ``unsafe`` блоках.

Объявляется тип сырого указателя через символ ``$`` и пару круглых скобок, следующих за ним, в которых указывается тип элемента.
Примеры:

.. code-block:: u_spr

   type i32_ptr = $(i32); // указатель на тип "i32".
   type tup_ptr = $(tup[i32, f32]); // указатель на тип кортежа.
   type bool_ptr_ptr = $($(bool)); // указатель на указатель на "bool".

Значение типа указателя можно получить из изменяемой ссылки с помощью оператора состоящего из лексемы ``$<`` и пары круглых скобок с выражением внутри.
Получение ссылки из указателя выполняется с помощью обратного оператора, начинающегося с лексемы ``$>``.

.. code-block:: u_spr

   var i32 mut x= 0;
   var (i32) x_ptr = $<(x); // Преобразование указателя на "x" в ссылку.
   unsafe{  $>(x_ptr) = 24;  } // Разыменование указателя и присвоение значения полученной ссылке. Дозволено только в "unsafe" коде.

Стоит отметить, что в Ü, в отличие от C++ нету модификаторов изменяемости у типов указателей.
Все указатели считаются указывающими на изменяемые данные.
Поэтому указатель можно получить только из изменяемой ссылки и оператор разыменования указателя возвращает изменяемую ссылку.

Указатель можно инициализировать ``zero_init`` инициализатором, в таком случае указатель будет должным образом занулён.
