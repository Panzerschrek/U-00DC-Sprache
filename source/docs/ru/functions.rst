Функции
=======

Язык Ü поддерживает свободные функции. Функции принимают от нуля и более аргументов и могут возвращать значение.

Примеры объявлений функций:

.. code-block:: u_spr

   fn Add( i32 x, i32 y ) : i32; // Функция принимает два аргумента типов "i32" и возвращает значение типа "i32".
   fn Sleep( float sec ); // Функция принимает один аргумент типа "f32" и не возвращает значения.
   fn GetPi() : f64; // Функция не принимает аргументов и возвращает значение типа "f64".
   fn Max( i64& x, i64& y ) : i64&; // Функция принимает два аргумента типов "i64" по ссылке и возвращает ссылку того же типа.

***********
*Аргументы*
***********

Функции могут принимать аргументы-значения и ссылочные аргументы.
Ссылочные аргументы объявляются с использованием "&" после имени типа аргумента.
Аргументы могут иметь модифиакторы изменияемости "mut" или "imut", указываемые после имени типа или после "&" (для ссылочных аргументов).
Если модификатор измениямости не указан, неявно будет применён модификатор "imut".

Для ссылочных аргументов модификаторы изменяемости имеют значения для вызываемого кода.
В функцию, принимающую изменяемую ссылку, нельзя передать неизменяемую переменную.
Для аргументов значений же модификатор изменяемости влияет только на тело функции, неизменяемый аргумент-значение нельзя будет изменить в теле.

Примеры аргументов:

.. code-block:: u_spr

   fn Add( i32 imut x, i32 y ) : i32; // Неизменяемые аргументы-значения. Второй аргумент будет неизменяемым, т. к. к нему применён модификатор по умолчанию "imut"
   fn Inc( u32 &mut x ); // Изменяемый ссылочный аргумент
   fn GetLength( ust::string8 &imut str ) : size_type; // Неизменяемый ссылочный аргумент
   fn GetNumZeros( ust::string8 & str ) : size_type;  // Неизменяемый ссылочный аргумент, т. к. к нему применён модификатор по умолчанию "imut"

***********************
*Возвращаемое значение*
***********************

Функция может не возвращать значений. Для этого можно или не указать тип возвращаемого значения, или указать тип "void":

.. code-block:: u_spr

   fn Sleep( float sec );
   float USleep( u64 ns ) : void;

Функция может возвращать значение. Для этого надо указать тип значения:

.. code-block:: u_spr

   fn Add( i32 x, i32 y ) : i32; // тип возвращаемого значения - "i32"

Функция может возвращать ссылочное значение - изменяемое или неизменяемое. Для этого надо указать "&" после типа возвращаемого значения.
После него можно опционально указать модификатор изменяемости "mut" или "imut".
Если модификатор измениямости не указан, неявно будет применён модификатор "imut".

.. code-block:: u_spr

   fn Max( i64& x, i64& y ) : i64 &imut; // Функция вернёт неизменяемую ссылку типа "i64"
   fn Max( u64& x, u64& y ) : i64 &; // Функция вернёт неизменяемую ссылку типа "u64", модификатор "imut" применён неявно
   fn Max( u64 &mut x, u64 &mut y ) : i64 &mut; // Функция вернёт изменяемую ссылку типа "u64"

************************
*Прототипы и реализации*
************************
Объявление функции, оканчивающееся на ";" означает, что объявлен лишь прототип функции, если же после объявления функции следует блок её тела в, обрамлённый в {}, то это объявление реализации.

.. code-block:: u_spr

   // объявили прототип
   fn Add( i32 x, i32 y ) : i32;
   
   // позже объявили реализацию функции
   fn Add( i32 x, i32 y ) : i32
   {
        return x + y;
   }
