import "../lex_synt_lib/lexical_analyzer.uh"

fn nomangle printf( char8& c, size_type i ) unsafe;

namespace U
{

fn PrintInt( i32 i )
{
	unsafe
	{
		printf( "%d\n\0"[0], size_type(i) );
	}
}

fn PrintStr( ust::array_view_imut</ char8 /> str )
{
	var ust::string8 mut s_copy(str);
	s_copy.push_back(0c8);
	unsafe
	{
		printf( "%s\n\0"[0], ust::ref_to_int(s_copy[0s]) );
	}
}

fn FirstTest()
{
	auto& c_program_text = "fn Foo() { }";
	auto res= LexicalAnalysis(c_program_text);
	foreach( & l : res.lexems )
	{
		PrintInt( i32(l.lexem_type) );
		PrintStr( l.text.range() );
	}
}

fn Main() : i32
{
	FirstTest();
	return 0;
}

} // namespace U

fn nomangle main() : i32
{
	return U::Main();
}
