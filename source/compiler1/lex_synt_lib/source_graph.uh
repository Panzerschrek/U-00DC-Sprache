import "syntax_analyzer.uh"

namespace U1
{

class IVfs interface
{
	fn virtual pure NormalizeFilePath(
		mut this,
		ust::string8& file_path,
		ust::string8& parent_file_path_normalized ) : ust::string8;

	fn virtual pure LoadFile( mut this, ust::string8& full_file_path ) : ust::optional</ust::string8/>;
}

struct SourceGraph
{
	struct Node
	{
		ust::string8 file_path_normalized;
		ust::string8 contents_hash;
		Synt::SyntaxAnalysisResult synt_result;
		ust::vector</size_type/> children;
	}

	ust::vector</Node/> nodes; // Node #0 is root
	Synt::MacroExpansionContextsPtr macro_expansion_contexts;
	LexSyntErrors errors;
}

type SourceFileContentsHashigFunction= fn( ust::string_view8 source_file_contents ) : ust::string8;

fn LoadSourceGraph(
	IVfs &mut vfs,
	SourceFileContentsHashigFunction source_file_contents_hashing_function,
	ust::string8& root_file_path,
	ust::string_view8 prelude_code ) : SourceGraph;

} // namespace U1
