import "syntax_elements.uh"

namespace U
{

namespace Synt
{

fn GetFilePos( Initializer& initializer ) : FilePos
{
	variant_visit( &el : initializer )
	{
		static_if( ust::is_same_type</ typeof(el), EmptyVariant />() )
		{
			return FilePos();
		}
		else if( ust::is_same_type</ typeof(el), Expression />() )
		{
			return GetFilePos(el);
		}
		else
		{
			return el.file_pos;
		}
	}
	halt;
}

fn GetFilePos( Expression& expression ) : FilePos
{
	variant_visit( &el : expression )
	{
		static_if( ust::is_same_type</ typeof(el), EmptyVariant />() )
		{
			return FilePos();
		}
		else if( ust::is_same_type</ typeof(el), ust::box</ArrayType/> />() )
		{
			return el.get_ref().file_pos;
		}
		else if( ust::is_same_type</ typeof(el), ust::box</FunctionType/> />() )
		{
			return el.get_ref().file_pos;
		}
		else
		{
			return el.file_pos;
		}
	}
	halt;
}

fn GetFilePos( BlockElement& block_element ) : FilePos
{
	variant_visit( &el : block_element )
	{
		static_if( ust::is_same_type</ typeof(el), Expression />() )
		{
			return GetFilePos(el);
		}
		else if( ust::is_same_type</ typeof(el), ust::box</Block/> />() )
		{
			return el.get_ref().file_pos;
		}
		else
		{
			return el.file_pos;
		}
	}
	halt;
}

} // namespace Synt

} // namespace U
