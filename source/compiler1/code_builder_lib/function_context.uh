import "type.uh"

namespace U
{

struct LoopFrame
{
	LLVMBasicBlockRef block_for_break;
	LLVMBasicBlockRef block_for_continue;
}

class FunctionContext
{
public:
	fn constructor( LLVMContextRef llvm_context, LLVMValueRef in_llvm_function, Type mut in_return_type );
	fn destructor();

	Type imut return_type;
	LLVMValueRef imut llvm_function;

	LLVMBasicBlockRef alloca_basic_block= LLVMBasicBlockRef::Null;
	LLVMBuilderRef alloca_ir_builder= LLVMBuilderRef::Null;

	LLVMBasicBlockRef function_basic_block= LLVMBasicBlockRef::Null;
	LLVMBuilderRef llvm_ir_builder= LLVMBuilderRef::Null;

	ust::vector</LoopFrame/> loops_stack;
}

} // namespace U
