import "llvm.uh"

// This file contains some helper functions for LLVM structures manipulations, implementing, using C++.
// If this file changed, "llvm_ext.cpp" must be changed too!

fn nomangle U1_GetFunctionType(LLVMValueRef f) unsafe : LLVMTypeRef;

fn nomangle U1_SetStructName(LLVMTypeRef t, NullTerminatedString& name) unsafe;

fn nomangle U1_BasicBlockHasPredecessors(LLVMBasicBlockRef basic_block) unsafe : bool;

fn nomangle U1_CreateOrphanGEP( LLVMTypeRef t, LLVMValueRef pointer, $(LLVMValueRef) indices, u32 num_indices ) unsafe : LLVMValueRef;
fn nomangle U1_InsertInstructionAfterAnother(LLVMValueRef src_instructuon, LLVMValueRef instruction_for_insert) unsafe;

fn nomangle U1_FunctionAddDereferenceableAttr(LLVMValueRef function, u32 index, u64 bytes) unsafe;

// Returns number of elements.
fn nomangle U1_ConvertUTF8ToUTF16(
	$(char8) src_buff, size_type src_buff_size,
	$(char16) dst_buff, size_type dst_buff_size ) unsafe : size_type;

// Returns number of elements.
fn nomangle U1_ConvertUTF8ToUTF32(
	$(char8) src_buff, size_type src_buff_size,
	$(char32) dst_buff, size_type dst_buff_size ) unsafe : size_type;

fn nomangle U1_ConstDataArray(LLVMTypeRef t, $(char8) data, size_type data_size, size_type element_count) unsafe : LLVMValueRef;
