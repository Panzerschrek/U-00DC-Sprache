// This file is used internally for low-level mutex manipulations.
// Do not use types/functions from this file directly!

import "type_traits.u"

namespace ust
{

namespace mutex_impl
{

// Opaque type representing underlying (OS-specific) mutex.
// This type is not relocable!
type mutex_t=
	type_select</
		constexpr_string_equals( compiler::target::os, "windows" ),
		$(byte8), // RTL_SRWLOCK
		[ byte64, 5 ] // pthread_mutex_t
	/>;

// Initialize mutex at given address.
fn initialize_mutex( mutex_t &mut m ) unsafe;

// Destroy mutex at given address.
fn destroy_mutex( mutex_t &mut m ) unsafe;

// Lock mutex and potentially wait if it's already locked.
// Unlocking should happen on the same thread which previously performed locking.
fn lock_mutex( mutex_t &mut m ) unsafe;

// Unlock mutex previously locked.
// Unlocking should happen on the same thread which previously performed locking.
fn unlock_mutex( mutex_t &mut m ) unsafe;

} // namespace mutex_impl

} // namespace ust
