import "filesystem.u" // TODO - move io_error enum onto different place.
import "inet_address.u"

namespace ust
{

namespace net
{

class udp_socket
{
public:
	fn create() : result</udp_socket, io_error/>;

	fn create_and_bind( socket_address& a ) : result</udp_socket, io_error/>;

	fn constructor( raw_socket s ) unsafe; // constructor for internal usage.
	fn destructor();

	fn send( mut this, array_view_imut</byte8/> data ) : result</size_type, io_error/>;

	fn send_to( mut this, socket_address& a, array_view_imut</byte8/> data ) : result</size_type, io_error/>;

	fn receive( mut this, array_view_mut</byte8/> data ) : result</ size_type, io_error/>;

	fn receive_from( mut this, array_view_mut</byte8/> data ) : result</ tup[ socket_address, size_type ], io_error/>;

	fn connect( mut this, socket_address& a ) : result</void, io_error/>;

private:
	type raw_socket= i32;

private:
	raw_socket socket_;
}

} // namespace net

} // namespace ust
