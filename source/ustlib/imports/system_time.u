class system_time
{
public:
	fn constructor( impl& in_impl ) unsafe
		( impl_(in_impl) )
	{}

	op==( system_time& l, system_time& r ) : bool = default;

	op<=>( system_time& l, system_time& r ) : i32;

	struct impl_unix
	{
		// Basically "timespec" fields.
		i64 seconds;
		i64 nanoseconds;

		op<=>( impl_unix& l, impl_unix& r ) : i32
		{
			auto s= l.seconds <=> r.seconds;
			if( s != 0 )
			{
				return s;
			}
			return l.nanoseconds <=> r.nanoseconds;
		}
	}

	struct impl_windows
	{
		u64 intervals; // each step is 10^-7 seconds, same as FILETIME.

		op<=>( impl_windows& l, impl_windows& r ) : i32
		{
			return l.intervals <=> r.intervals;
		}
	}

	type impl= impl_unix;

private:
	impl impl_;
}

