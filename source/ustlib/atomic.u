namespace ust
{

// Use only 32-bit atomic operations, because its supported on all platforms.

// Functions returns old value of 'x'.
fn atomic_add( i32 &mut x, i32 y ) : i32; // Externally implemented.
fn atomic_sub( i32 &mut x, i32 y ) : i32 { return atomic_add( x, -y ); }
fn atomic_inc( i32 &mut x ) : i32 { return atomic_add( x, +1 ); }
fn atomic_dec( i32 &mut x ) : i32 { return atomic_add( x, -1 ); }

fn atomic_add( u32 &mut x, u32 y ) : u32; // Externally implemented.
fn atomic_sub( u32 &mut x, u32 y ) : u32 { return atomic_add( x, -y ); }
fn atomic_inc( u32 &mut x ) : u32 { return atomic_add( x,  1u ); }
fn atomic_dec( u32 &mut x ) : u32 { return atomic_add( x, ~0u ); }

// compare and swap - returns true on success.
fn atomic_compare_and_swap( i32 &mut addr, i32 old, i32 new ) : bool;
fn atomic_compare_and_swap( u32 &mut addr, u32 old, u32 new ) : bool;


} // namespace ust
