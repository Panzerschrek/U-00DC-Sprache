//##success_test
import "../imports/bit_math.u"

fn nomangle main() : i32
{
	// swap_bytes
	static_assert( ust::swap_bytes( 0x5A6Bu16 ) == 0x6B5Au16 );
	static_assert( ust::swap_bytes( 0xC7F1i16 ) == 0xF1C7i16 );
	static_assert( ust::swap_bytes( byte16( 0x67D9u16 ) ) == byte16( 0xD967u16 ) );
	static_assert( ust::swap_bytes( 0xA1B2C3D4u ) == 0xD4C3B2A1u );
	static_assert( ust::swap_bytes( 0x0542F239 ) == 0x39F24205 );
	static_assert( ust::swap_bytes( byte32( 0x01234567 ) ) == byte32( 0x67452301 ) );
	static_assert( ust::swap_bytes( 0x0123456789ABCDEFu64 ) == 0xEFCDAB8967452301u64 );
	static_assert( ust::swap_bytes( 0x168CF6983AF71234i64 ) == 0x3412F73A98F68C16i64 );
	static_assert( ust::swap_bytes( byte64( 0xEFCDAB8967452301u64 ) ) == byte64( 0x0123456789ABCDEFu64 ) );

	// count_set_bits
	static_assert( ust::count_set_bits( 0u ) == 0u );
	static_assert( ust::count_set_bits( 1u ) == 1u );
	static_assert( ust::count_set_bits( 2u ) == 1u );
	static_assert( ust::count_set_bits( 3u ) == 2u );
	static_assert( ust::count_set_bits( 4u ) == 1u );
	static_assert( ust::count_set_bits( 5u ) == 2u );
	static_assert( ust::count_set_bits( 6u ) == 2u );
	static_assert( ust::count_set_bits( 7u ) == 3u );
	static_assert( ust::count_set_bits( 8u ) == 1u );
	static_assert( ust::count_set_bits( 16u ) == 1u );
	static_assert( ust::count_set_bits( 64u ) == 1u );
	static_assert( ust::count_set_bits( 65535u ) == 16u );
	static_assert( ust::count_set_bits( 65536u ) == 1u );
	static_assert( ust::count_set_bits( 65537u ) == 2u );
	static_assert( ust::count_set_bits( 2147483648u ) == 1u );
	static_assert( ust::count_set_bits( 4294967295u ) == 32u );

	static_assert( ust::count_set_bits( 8589934592u64 ) == 1u64 );
	static_assert( ust::count_set_bits( 35184372088831u64 ) == 45u64 );
	static_assert( ust::count_set_bits( 9223372036854775808u64 ) == 1u64 );
	static_assert( ust::count_set_bits( 18446744073709551615u64 ) == 64u64 );

	return 0;
}
