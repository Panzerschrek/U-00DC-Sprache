//##success_test
import "../imports/atomic.u"

fn nomangle main() : i32
{
	{
		var i8 mut x= -77i8;
		halt if( ust::atomic_read( x ) != -77i8 );
		ust::atomic_write( x, 55i8 );
		halt if( ust::atomic_read( x ) != 55i8 );
	}
	{
		var u8 mut x=13u8;
		halt if( ust::atomic_read( x ) != 13u8 );
		ust::atomic_write( x, 99u8 );
		halt if( ust::atomic_read( x ) != 99u8 );
	}
	{
		var i16 mut x= -77i16;
		halt if( ust::atomic_read( x ) != -77i16 );
		ust::atomic_write( x, 55i16 );
		halt if( ust::atomic_read( x ) != 55i16 );
	}
	{
		var u16 mut x= 99u16;
		halt if( ust::atomic_read( x ) != 99u16 );
		ust::atomic_write( x, 9999u16 );
		halt if( ust::atomic_read( x ) != 9999u16 );
	}
	{
		var i32 mut x= -77;
		halt if( ust::atomic_read( x ) != -77 );
		ust::atomic_write( x, 55 );
		halt if( ust::atomic_read( x ) != 55 );
	}
	{
		var u32 mut x= 99u;
		halt if( ust::atomic_read( x ) != 99u );
		ust::atomic_write( x, 99999999u );
		halt if( ust::atomic_read( x ) != 99999999u );
	}
	{
		var f32 mut x= 0.67f;
		halt if( ust::atomic_read( x ) != 0.67f );
		ust::atomic_write( x, -12345.6f );
		halt if( ust::atomic_read( x ) != -12345.6f );
	}
	{
		var byte8 mut x(74u8);
		halt if( ust::atomic_read( x ) != byte8(74u8) );
		ust::atomic_write( x, byte8(199u8) );
		halt if( ust::atomic_read( x ) != byte8(199u8) );
	}
	{
		var byte16 mut x(742u16);
		halt if( ust::atomic_read( x ) != byte16(742u16) );
		ust::atomic_write( x, byte16(9999u16) );
		halt if( ust::atomic_read( x ) != byte16(9999u16) );
	}
	{
		var byte32 mut x(99);
		halt if( ust::atomic_read( x ) != byte32(99) );
		ust::atomic_write( x, byte32(99999999) );
		halt if( ust::atomic_read( x ) != byte32(99999999) );
	}
	static_if( c_enable_64bit_atomics )
	{
		var f64 mut x= -464333.3468;
		halt if( ust::atomic_read( x ) != -464333.3468 );
		ust::atomic_write( x, 0.06537854 );
		halt if( ust::atomic_read( x ) != 0.06537854 );
	}
	{
		var i8 mut x(0);
		halt if( ust::atomic_swap( x, 77i8 ) != 0i8 );
		halt if( ust::atomic_swap( x, 51i8 ) != 77i8 );
		halt if( ust::atomic_swap( x, -75i8 ) != 51i8 );
		halt if( ust::atomic_swap( x, 3i8 ) != -75i8 );
		halt if( ust::atomic_read( x ) != 3i8 );
	}
	{
		var u8 mut x(0);
		halt if( ust::atomic_swap( x, 41u8 ) != 0u8 );
		halt if( ust::atomic_swap( x, 69u8 ) != 41u8 );
		halt if( ust::atomic_swap( x, 1u8 ) != 69u8 );
		halt if( ust::atomic_swap( x, 0u8 ) != 1u8 );
		halt if( ust::atomic_swap( x, 194u8 ) != 0u8 );
		halt if( ust::atomic_read( x ) != 194u8 );
	}
	{
		var i16 mut x(0);
		halt if( ust::atomic_swap( x, 77i16 ) != 0i16 );
		halt if( ust::atomic_swap( x, 451i16 ) != 77i16 );
		halt if( ust::atomic_swap( x, -75i16 ) != 451i16 );
		halt if( ust::atomic_swap( x, 3i16 ) != -75i16 );
		halt if( ust::atomic_read( x ) != 3i16 );
	}
	{
		var u16 mut x(0);
		halt if( ust::atomic_swap( x, 741u16 ) != 0u16 );
		halt if( ust::atomic_swap( x, 6669u16 ) != 741u16 );
		halt if( ust::atomic_swap( x, 1u16 ) != 6669u16 );
		halt if( ust::atomic_swap( x, 0u16 ) != 1u16 );
		halt if( ust::atomic_swap( x, 8944u16 ) != 0u16 );
		halt if( ust::atomic_read( x ) != 8944u16 );
	}
	{
		var i32 mut x= 0;
		halt if( ust::atomic_swap( x, 77 ) != 0 );
		halt if( ust::atomic_swap( x, 451 ) != 77 );
		halt if( ust::atomic_swap( x, -75 ) != 451 );
		halt if( ust::atomic_swap( x, 3 ) != -75 );
		halt if( ust::atomic_read( x ) != 3 );
	}
	{
		var u32 mut x= 0u;
		halt if( ust::atomic_swap( x, 741u ) != 0u );
		halt if( ust::atomic_swap( x, 66679u ) != 741u );
		halt if( ust::atomic_swap( x, 1u ) != 66679u );
		halt if( ust::atomic_swap( x, 0u ) != 1u );
		halt if( ust::atomic_swap( x, 894444u ) != 0u );
		halt if( ust::atomic_read( x ) != 894444u );
	}
	{
		var ssize_type mut x(0);
		halt if( ust::atomic_swap( x, ssize_type(722) ) != ssize_type(0) );
		halt if( ust::atomic_swap( x, ssize_type(11) ) != ssize_type(722) );
		halt if( ust::atomic_swap( x, ssize_type(843356) ) != ssize_type(11) );
		halt if( ust::atomic_read( x ) != ssize_type(843356) );
	}
	{
		var size_type mut x= 0s;
		halt if( ust::atomic_swap( x, 37s ) != 0s );
		halt if( ust::atomic_swap( x, 986s ) != 37s );
		halt if( ust::atomic_swap( x, 7776s ) != 986s );
		halt if( ust::atomic_read( x ) != 7776s );
	}
	{
		var f32 mut x= 0.0f;
		halt if( ust::atomic_swap( x, 6733.5f ) != 0.0f );
		halt if( ust::atomic_swap( x, -0.5623f ) != 6733.5f );
		halt if( ust::atomic_swap( x, 1.37e24f ) != -0.5623f );
		halt if( ust::atomic_swap( x, -6437733.125f ) != 1.37e24f );
		halt if( ust::atomic_read( x ) != -6437733.125f );
	}
	static_if( c_enable_64bit_atomics )
	{
		var f64 mut x= 0.0;
		halt if( ust::atomic_swap( x, 12453.0363 ) != 0.0 );
		halt if( ust::atomic_swap( x, 0.0002646474315 ) != 12453.0363 );
		halt if( ust::atomic_swap( x, -2364646464.37854247 ) != 0.0002646474315 );
		halt if( ust::atomic_swap( x, 67444784.023623 ) != -2364646464.37854247 );
		halt if( ust::atomic_read( x ) != 67444784.023623 );
	}
	{
		var byte8 mut x(0u8);
		halt if( ust::atomic_swap( x, byte8(78u8) ) != byte8(0u8) );
		halt if( ust::atomic_swap( x, byte8(178u8) ) != byte8(78u8) );
		halt if( ust::atomic_swap( x, byte8(32u8) ) != byte8(178u8) );
		halt if( ust::atomic_read( x ) != byte8(32u8) );
	}
	{
		var byte16 mut x(0u16);
		halt if( ust::atomic_swap( x, byte16(78u16) ) != byte16(0u16) );
		halt if( ust::atomic_swap( x, byte16(1789u16) ) != byte16(78u16) );
		halt if( ust::atomic_swap( x, byte16(32u16) ) != byte16(1789u16) );
		halt if( ust::atomic_read( x ) != byte16(32u16) );
	}
	{
		var byte32 mut x(0u);
		halt if( ust::atomic_swap( x, byte32(78u) ) != byte32(0u) );
		halt if( ust::atomic_swap( x, byte32(1789u) ) != byte32(78u) );
		halt if( ust::atomic_swap( x, byte32(32u) ) != byte32(1789u) );
		halt if( ust::atomic_read( x ) != byte32(32u) );
	}
	static_if( c_enable_64bit_atomics )
	{
		var byte64 mut x(0u64);
		halt if( ust::atomic_swap( x, byte64(83424u64) ) != byte64(0u64) );
		halt if( ust::atomic_swap( x, byte64(123563474344u) ) != byte64(83424u64) );
		halt if( ust::atomic_swap( x, byte64(9742312u64) ) != byte64(123563474344u) );
		halt if( ust::atomic_read( x ) != byte64(9742312u64) );
	}
	{
		var i32 mut x= 0, mut y= 0, mut z= 0, mut w= 0;
		var $(i32) null= zero_init, mut ptr= null;
		halt if( ust::atomic_swap( ptr, $<(x) ) != null );
		halt if( ust::atomic_swap( ptr, $<(w) ) != $<(x) );
		halt if( ust::atomic_swap( ptr, $<(y) ) != $<(w) );
		halt if( ust::atomic_swap( ptr, $<(z) ) != $<(y) );
		halt if( ust::atomic_read( ptr ) != $<(z) );
	}
	{
		var u32 mut x= 0u;
		halt if( ust::atomic_add( x, 56u ) !=  0u );
		halt if( ust::atomic_sub( x,  6u ) != 56u );
		halt if( ust::atomic_inc( x ) != 50u );
		halt if( ust::atomic_dec( x ) != 51u );
		halt if( ust::atomic_read(x) != 50u );
	}
	{
		var i32 mut x= 0;
		halt if( ust::atomic_add( x, 56 ) !=  0 );
		halt if( ust::atomic_sub( x, 66 ) != 56 );
		halt if( ust::atomic_inc( x ) != -10 );
		halt if( ust::atomic_dec( x ) != - 9 );
		halt if( ust::atomic_read(x) != -10 );
	}
	static_if( c_enable_64bit_atomics )
	{
		var u64 mut x= 0u64;
		halt if( ust::atomic_add( x, 56u64 ) !=  0u64 );
		halt if( ust::atomic_sub( x,  6u64 ) != 56u64 );
		halt if( ust::atomic_inc( x ) != 50u64 );
		halt if( ust::atomic_dec( x ) != 51u64 );
		halt if( ust::atomic_read(x) != 50u64 );
		halt if( ust::atomic_add( x, 6464647547474u64 ) != 50u64 );
		halt if( ust::atomic_read(x) != 6464647547524u64 );
	}
	static_if( c_enable_64bit_atomics )
	{
		var i64 mut x= 0i64;
		halt if( ust::atomic_add( x, 56i64 ) != 0i64 );
		halt if( ust::atomic_sub( x, 66i64 ) != 56i64 );
		halt if( ust::atomic_inc( x ) != -10i64 );
		halt if( ust::atomic_dec( x ) != - 9i64 );
		halt if( ust::atomic_read(x) != -10i64 );
		halt if( ust::atomic_add( x, 6433743111727i64 ) != -10i64 );
		halt if( ust::atomic_read(x) != 6433743111717i64 );
	}
	{
		var size_type mut x= 0s;
		halt if( ust::atomic_add( x, 56s ) !=  0s );
		halt if( ust::atomic_sub( x,  6s ) != 56s );
		halt if( ust::atomic_inc( x ) != 50s );
		halt if( ust::atomic_dec( x ) != 51s );
		halt if( ust::atomic_read(x) != 50s );
	}
	{
		var ssize_type mut x(0);
		halt if( ust::atomic_add( x, ssize_type(56) ) != ssize_type( 0) );
		halt if( ust::atomic_sub( x, ssize_type(66) ) != ssize_type(56) );
		halt if( ust::atomic_inc( x ) != ssize_type(-10) );
		halt if( ust::atomic_dec( x ) != ssize_type(-9) );
		halt if( ust::atomic_read(x) != ssize_type(-10) );
	}
	{
		var i32 mut x= 0;
		halt if( ust::atomic_or ( x, 0b00000000000000000001001001100100 ) != 0 );
		halt if( ust::atomic_read( x ) != 0b00000000000000000001001001100100 );
		halt if( ust::atomic_and( x, 0b01000010000001100000001000100100 ) != 0b00000000000000000001001001100100 );
		halt if( ust::atomic_read( x ) != 0b00000000000000000000001000100100 );
		halt if( ust::atomic_xor( x, 0b00000000000000000000000000000101 ) != 0b00000000000000000000001000100100 );
		halt if( ust::atomic_read( x ) != 0b00000000000000000000001000100001 );
	}
	{
		var u32 mut x= 0u;
		halt if( ust::atomic_or ( x, 0b00000000000000000001001001100100u ) != 0u );
		halt if( ust::atomic_read( x ) != 0b00000000000000000001001001100100u );
		halt if( ust::atomic_and( x, 0b01000010000001100000001000100100u ) != 0b00000000000000000001001001100100u );
		halt if( ust::atomic_read( x ) != 0b00000000000000000000001000100100u );
		halt if( ust::atomic_xor( x, 0b00000000000000000000000000000101u ) != 0b00000000000000000000001000100100u );
		halt if( ust::atomic_read( x ) != 0b00000000000000000000001000100001u );
	}
	{
		var ssize_type mut x(0);
		halt if( ust::atomic_or ( x, ssize_type(0b00000000000000000001001001100100) ) != ssize_type(0) );
		halt if( ust::atomic_read( x ) != ssize_type(0b00000000000000000001001001100100) );
		halt if( ust::atomic_and( x, ssize_type(0b01000010000001100000001000100100) ) != ssize_type(0b00000000000000000001001001100100) );
		halt if( ust::atomic_read( x ) != ssize_type(0b00000000000000000000001000100100) );
		halt if( ust::atomic_xor( x, ssize_type(0b00000000000000000000000000000101) ) != ssize_type(0b00000000000000000000001000100100) );
		halt if( ust::atomic_read( x ) != ssize_type(0b00000000000000000000001000100001) );
	}
	{
		var size_type mut x= 0s;
		halt if( ust::atomic_or ( x, 0b00000000000000000001001001100100s ) != 0s );
		halt if( ust::atomic_read( x ) != 0b00000000000000000001001001100100s );
		halt if( ust::atomic_and( x, 0b01000010000001100000001000100100s ) != 0b00000000000000000001001001100100s );
		halt if( ust::atomic_read( x ) != 0b00000000000000000000001000100100s );
		halt if( ust::atomic_xor( x, 0b00000000000000000000000000000101s ) != 0b00000000000000000000001000100100s );
		halt if( ust::atomic_read( x ) != 0b00000000000000000000001000100001s );
	}
	{
		var i32 mut x= 22, mut y= 22;
		halt if( ust::atomic_compare_exchange_strong( x, y, 7 ) != true );
		halt if( ust::atomic_read(x) !=  7 );
		halt if( ust::atomic_read(y) != 22 );
	}
	{
		var i32 mut x= 111, mut y= 77;
		halt if( ust::atomic_compare_exchange_strong( x, y, 7 ) != false );
		halt if( ust::atomic_read(x) != 111 );
		halt if( ust::atomic_read(y) != 111 );
	}
	{
		var u32 mut x= 14u, mut y= 14u;
		halt if( ust::atomic_compare_exchange_strong( x, y, 85u ) != true );
		halt if( ust::atomic_read(x) != 85u );
		halt if( ust::atomic_read(y) != 14u );
	}
	{
		var u32 mut x= 521u, mut y= 66u;
		halt if( ust::atomic_compare_exchange_strong( x, y, 55524u ) != false );
		halt if( ust::atomic_read(x) != 521u );
		halt if( ust::atomic_read(y) != 521u );
	}
	static_if( c_enable_64bit_atomics )
	{
		var i64 mut x= 22i64, mut y= 22i64;
		halt if( ust::atomic_compare_exchange_strong( x, y, 7i64 ) != true );
		halt if( ust::atomic_read(x) !=  7i64 );
		halt if( ust::atomic_read(y) != 22i64 );
	}
	static_if( c_enable_64bit_atomics )
	{
		var i64 mut x= 111i64, mut y= 77i64;
		halt if( ust::atomic_compare_exchange_strong( x, y, 7i64 ) != false );
		halt if( ust::atomic_read(x) != 111i64 );
		halt if( ust::atomic_read(y) != 111i64 );
	}
	static_if( c_enable_64bit_atomics )
	{
		var u64 mut x= 14u64, mut y= 14u64;
		halt if( ust::atomic_compare_exchange_strong( x, y, 85u64 ) != true );
		halt if( ust::atomic_read(x) != 85u64 );
		halt if( ust::atomic_read(y) != 14u64 );
	}
	static_if( c_enable_64bit_atomics )
	{
		var u64 mut x= 521u64, mut y= 66u64;
		halt if( ust::atomic_compare_exchange_strong( x, y, 55524u64 ) != false );
		halt if( ust::atomic_read(x) != 521u64 );
		halt if( ust::atomic_read(y) != 521u64 );
	}
	{
		var byte32 mut x= byte32(14), mut y= byte32(14);
		halt if( ust::atomic_compare_exchange_strong( x, y, byte32(85) ) != true );
		halt if( ust::atomic_read(x) != byte32(85) );
		halt if( ust::atomic_read(y) != byte32(14) );
	}
	{
		var byte32 mut x= byte32(521), mut y= byte32(66);
		halt if( ust::atomic_compare_exchange_strong( x, y, byte32(55524) ) != false );
		halt if( ust::atomic_read(x) != byte32(521) );
		halt if( ust::atomic_read(y) != byte32(521) );
	}
	static_if( c_enable_64bit_atomics )
	{
		var byte64 mut x= byte64(14u64), mut y= byte64(14u64);
		halt if( ust::atomic_compare_exchange_strong( x, y, byte64(85u64) ) != true );
		halt if( ust::atomic_read(x) != byte64(85u64) );
		halt if( ust::atomic_read(y) != byte64(14u64) );
	}
	static_if( c_enable_64bit_atomics )
	{
		var byte64 mut x= byte64(521u64), mut y= byte64(66u64);
		halt if( ust::atomic_compare_exchange_strong( x, y, byte64(55524u64) ) != false );
		halt if( ust::atomic_read(x) != byte64(521u64) );
		halt if( ust::atomic_read(y) != byte64(521u64) );
	}
	{
		var ssize_type mut x(14), mut y(14);
		halt if( ust::atomic_compare_exchange_strong( x, y, ssize_type(85) ) != true );
		halt if( ust::atomic_read(x) != ssize_type(85) );
		halt if( ust::atomic_read(y) != ssize_type(14) );
	}
	{
		var ssize_type mut x(521), mut y(66);
		halt if( ust::atomic_compare_exchange_strong( x, y, ssize_type(55524) ) != false );
		halt if( ust::atomic_read(x) != ssize_type(521) );
		halt if( ust::atomic_read(y) != ssize_type(521) );
	}
	{
		var size_type mut x= 14s, mut y= 14s;
		halt if( ust::atomic_compare_exchange_strong( x, y, 85s ) != true );
		halt if( ust::atomic_read(x) != 85s );
		halt if( ust::atomic_read(y) != 14s );
	}
	{
		var size_type mut x= 521s, mut y= 66s;
		halt if( ust::atomic_compare_exchange_strong( x, y, 55524s ) != false );
		halt if( ust::atomic_read(x) != 521s );
		halt if( ust::atomic_read(y) != 521s );
	}
	{
		var i32 mut x= 0, mut y= 0;
		var $(i32) mut ptr_a= $<(x), mut ptr_b= $<(x), mut ptr_c= $<(y);
		halt if( ust::atomic_compare_exchange_strong( ptr_a, ptr_b, ptr_c ) != true );
		halt if( ust::atomic_read(ptr_a) != $<(y) );
		halt if( ust::atomic_read(ptr_b) != $<(x) );
	}
	{
		var i32 mut x= 0, mut y= 0, mut z= 0;
		var $(i32) mut ptr_a= $<(x), mut ptr_b= $<(y), mut ptr_c= $<(z);
		halt if( ust::atomic_compare_exchange_strong( ptr_a, ptr_b, ptr_c ) != false );
		halt if( ust::atomic_read(ptr_a) != $<(x) );
		halt if( ust::atomic_read(ptr_b) != $<(x) );
	}
	{
		var byte32 mut b(123);
		halt if( ust::atomic_read( b ) != byte32(123) );
		ust::atomic_write( b, byte32(54) );
		halt if( ust::atomic_read( b ) != byte32(54) );
	}
	static_if( c_enable_64bit_atomics )
	{
		var byte64 mut b(12345678910u64);
		halt if( ust::atomic_read( b ) != byte64(12345678910u64) );
		ust::atomic_write( b, byte64(33000000000000u64) );
		halt if( ust::atomic_read( b ) != byte64(33000000000000u64) );
	}
	{
		var char16 mut c= zero_init, mut d= zero_init;
		var $(char16) mut c_ptr= $<(c), mut d_ptr= $<(d);

		halt if( ust::atomic_read( c_ptr ) != $<(c) );
		ust::atomic_write( c_ptr, d_ptr );
		halt if( ust::atomic_read( c_ptr ) != $<(d) );
	}

	return 0;
}
