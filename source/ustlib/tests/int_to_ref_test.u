//##success_test
import "../imports/memory.u"

fn nomangle main() call_conv( "C" ) : i32
{
	unsafe
	{
		// int -> ref -> int must save value
		var size_type num(9684);
		halt if( ust::ref_to_int( ust::int_to_ref</void/>( num ) ) != num );
	}

	unsafe
	{
		// ref -> int -> ref must save value
		var f32 num= 65.54f;
		auto ref_num= ust::ref_to_int( num );
		var f32& ref= ust::int_to_ref</f32/>( ref_num );
		halt if( ref != num );
	}

	unsafe
	{
		// int -> ptr -> int must save value
		var size_type mut num(9684);
		halt if( ust::ptr_to_int( ust::int_to_ptr</void/>( num ) ) != num );
	}

	unsafe
	{
		// ptr -> int -> ptr must save value
		var f32 mut num= 65.54f;
		auto ptr_num= ust::ptr_to_int( $<(num) );
		var $(f32) ptr= ust::int_to_ptr</f32/>( ptr_num );
		halt if( $>(ptr) != num );
	}

	return 0;
}
