import "../../imports/barrier_impl.u"
import "windows.uh"

namespace ust
{

namespace barrier_impl
{

static_assert( typeinfo</barrier_t/>.size_of == typeinfo</RTL_BARRIER_/>.size_of );
static_assert( typeinfo</barrier_t/>.align_of >= typeinfo</RTL_BARRIER_/>.align_of );

fn initialize_barrier( barrier_t &mut b, u32 num_threads ) unsafe
{
	unsafe
	{
		var BOOL res=
			::InitializeSynchronizationBarrier(
				$<( cast_ref_unsafe</RTL_BARRIER_/>(b) ),
				LONG(num_threads),
				LONG(-1) );
		halt if( res != 1 );
	}
}

fn destroy_barrier( barrier_t &mut b ) unsafe
{
	unsafe( ::DeleteSynchronizationBarrier( $<( cast_ref_unsafe</RTL_BARRIER_/>(b) ) ) );
}

fn wait_barrier( barrier_t &mut b ) unsafe
{
	unsafe( ::EnterSynchronizationBarrier( $<( cast_ref_unsafe</RTL_BARRIER_/>(b) ), DWORD(0) ) );
}

} // namespace barrier_impl

} // namespace ust
