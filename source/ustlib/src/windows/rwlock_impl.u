import "../../imports/memory.u"
import "../../imports/rwlock_impl.u"
import "windows.uh"

namespace ust
{

namespace rwlock_impl
{

static_assert( typeinfo</rwlock/>.size_of == typeinfo</ RTL_SRWLOCK />.size_of, "Types mismatch!" );

fn init_rwlock( rwlock &mut l ) unsafe
{
	unsafe( ::InitializeSRWLock( $<( cast_ref_unsafe</RTL_SRWLOCK/>(l) ) ) );
}

fn destroy_rwlock( rwlock &mut l ) unsafe
{
	// This lock doesn't require destruction.
	ignore_unused(l);
}

fn lock_rwlock_shared( rwlock &mut l ) unsafe
{
	unsafe( ::AcquireSRWLockShared( $<( cast_ref_unsafe</RTL_SRWLOCK/>( l ) ) ) );
}

fn unlock_rwlock_shared( rwlock &mut l ) unsafe
{
	unsafe( ::ReleaseSRWLockShared( $<( cast_ref_unsafe</RTL_SRWLOCK/>(l) ) ) );
}

fn lock_rwlock_exclusive( rwlock &mut l ) unsafe
{
	unsafe( ::AcquireSRWLockExclusive( $<( cast_ref_unsafe</RTL_SRWLOCK/>(l) ) ) );
}

fn unlock_rwlock_exclusive( rwlock &mut l ) unsafe
{
	unsafe( ::ReleaseSRWLockExclusive( $<( cast_ref_unsafe</RTL_SRWLOCK/>(l) ) ) );
}

} // namespace rwlock_impl

} // namespace ust
