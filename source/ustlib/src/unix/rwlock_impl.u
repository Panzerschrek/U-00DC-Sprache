import "../../imports/rwlock_impl.u"
import "pthread.uh"

namespace ust
{

namespace rwlock_impl
{

static_assert( same_type</ rwlock, pthread_rwlock_t />, "Types mismatch!" );

fn init_rwlock( rwlock &mut l ) unsafe
{
	unsafe
	{
		var $(pthread_rwlockattr_t) attr= zero_init;
		halt if( ::pthread_rwlock_init( l, attr ) != 0 );
	}
}

fn destroy_rwlock( rwlock &mut l ) unsafe
{
	halt if( unsafe( ::pthread_rwlock_destroy( l ) ) != 0 );
}

fn lock_rwlock_shared( rwlock &mut l ) unsafe
{
	halt if( unsafe( ::pthread_rwlock_rdlock( l ) ) != 0 );
}

fn unlock_rwlock_shared( rwlock &mut l ) unsafe
{
	halt if( unsafe( ::pthread_rwlock_unlock( l ) ) != 0 );
}

fn lock_rwlock_exclusive( rwlock &mut l ) unsafe
{
	halt if( unsafe( ::pthread_rwlock_wrlock( l ) ) != 0 );
}

fn unlock_rwlock_exclusive( rwlock &mut l ) unsafe
{
	halt if( unsafe( ::pthread_rwlock_unlock( l ) ) != 0 );
}

} // namespace rwlock_impl

} // namespace ust
