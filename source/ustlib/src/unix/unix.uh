// This file contains some definitions from UNIX (pparticulary Linux) headers, which are used inside "ustlib".
// These definitions are manually copypasted from the result of the CPPHeaderConverter tool execution and somewhat tweaked.

fn nomangle close( i32 ü__fd ) unsafe : i32;
fn nomangle fstat( i32 ü__fd, $(stat_) ü__buf ) unsafe : i32;
fn nomangle lseek64( i32 ü__fd, ü__off64_t ü__offset, i32 ü__whence ) unsafe : ü__off64_t;
fn nomangle lstat( $(char8) ü__file, $(stat_) ü__buf ) unsafe : i32;
fn nomangle mkdir( $(char8) ü__path, ü__mode_t ü__mode ) unsafe : i32;
fn nomangle open( $(char8) ü__file, i32 ü__oflag, ü__mode_t ü__mode ) unsafe : i32;
fn nomangle read( i32 ü__fd, $(byte8) ü__buf, size_t ü__nbytes ) unsafe : ssize_t;
fn nomangle rmdir( $(char8) ü__path ) unsafe : i32;
fn nomangle unlink( $(char8) ü__name ) unsafe : i32;
fn nomangle write( i32 ü__fd, $(byte8) ü__buf, size_t ü__n ) unsafe : ssize_t;

struct timespec ordered
{
	ü__time_t tv_sec;
	ü__syscall_slong_t tv_nsec;
}

// TODO - adopt this structure for 32-bit code and non-GNU/Linux systems (GNU/Hurd, OS X, FreeBSD).
struct stat_ ordered
{
	ü__dev_t st_dev;
	ü__ino_t st_ino;
	ü__nlink_t st_nlink;
	ü__mode_t st_mode;
	ü__uid_t st_uid;
	ü__gid_t st_gid;
	i32 ü__pad0;
	ü__dev_t st_rdev;
	ü__off_t st_size;
	ü__blksize_t st_blksize;
	ü__blkcnt_t st_blocks;
	timespec st_atim;
	timespec st_mtim;
	timespec st_ctim;
	[ ü__syscall_slong_t, 3u ] ü__glibc_reserved;
}

type size_t = size_type;
type ssize_t = ü__ssize_t;
type ü__blkcnt_t = i64;
type ü__blksize_t = i64;
type ü__dev_t = u64;
type ü__gid_t = u32;
type ü__ino_t = u64;
type ü__mode_t = u32;
type ü__nlink_t = u64;
type ü__off64_t = i64;
type ü__off_t = i64;
type ü__ssize_t = ssize_type;
type ü__syscall_slong_t = i64;
type ü__time_t = i64;
type ü__uid_t = u32;

auto constexpr EPERM = 1;
auto constexpr ENOENT = 2;
auto constexpr ESRCH = 3;
auto constexpr EINTR = 4;
auto constexpr EIO = 5;
auto constexpr ENXIO = 6;
auto constexpr E2BIG = 7;
auto constexpr ENOEXEC = 8;
auto constexpr EBADF = 9;
auto constexpr ECHILD = 10;
auto constexpr EAGAIN = 11;
auto constexpr ENOMEM = 12;
auto constexpr EACCES = 13;
auto constexpr EFAULT = 14;
auto constexpr ENOTBLK = 15;
auto constexpr EBUSY = 16;
auto constexpr EEXIST = 17;
auto constexpr EXDEV = 18;
auto constexpr ENODEV = 19;
auto constexpr ENOTDIR = 20;
auto constexpr EISDIR = 21;
auto constexpr EINVAL = 22;
auto constexpr ENFILE = 23;
auto constexpr EMFILE = 24;
auto constexpr ENOTTY = 25;
auto constexpr ETXTBSY = 26;
auto constexpr EFBIG = 27;
auto constexpr ENOSPC = 28;
auto constexpr ESPIPE = 29;
auto constexpr EROFS = 30;
auto constexpr EMLINK = 31;
auto constexpr EPIPE = 32;
auto constexpr EDOM = 33;
auto constexpr ERANGE = 34;

auto constexpr O_RDONLY = 0;
auto constexpr O_WRONLY = 1;
auto constexpr O_RDWR = 2;
auto constexpr O_CREAT = 64;
auto constexpr O_EXCL = 128;
auto constexpr O_TRUNC = 512;

auto constexpr S_IEXEC = 64;
auto constexpr S_IWRITE = 128;
auto constexpr S_IREAD = 256;
auto constexpr S_ISVTX = 512;
auto constexpr S_ISGID = 1024;
auto constexpr S_ISUID = 2048;
auto constexpr S_IFIFO = 4096;
auto constexpr S_IFCHR = 8192;
auto constexpr S_IFDIR = 16384;
auto constexpr S_IFREG = 32768;
auto constexpr S_IFBLK = 24576;
auto constexpr S_IFLNK = 40960;
auto constexpr S_IFSOCK = 49152;
auto constexpr S_IFMT = 61440;

auto constexpr SEEK_SET = 0;
auto constexpr SEEK_CUR = 1;
auto constexpr SEEK_END = 2;

auto constexpr STDIN_FILENO = 0;
auto constexpr STDOUT_FILENO = 1;
auto constexpr STDERR_FILENO = 2;
