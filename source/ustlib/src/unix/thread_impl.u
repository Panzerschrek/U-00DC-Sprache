import "../../imports/memory.u"
import "../../imports/thread_impl.u"
import "pthread.uh"

namespace ust
{

namespace thread_impl
{

static_assert( same_type</thread_handle, pthread_t/>, "Types mismatch!" );

fn create_and_start_thread( thread_start_function func, $(byte8) arg ) unsafe : thread_handle
{
	unsafe
	{
		var pthread_attr_t mut attr= zero_init;
		var pthread_t mut handle(0);

		halt if( ::pthread_attr_init( attr ) != 0 );
		halt if( ::pthread_create( handle, attr, func, arg ) != 0 );
		halt if( ::pthread_attr_destroy( attr ) != 0 );

		return handle;
	}
}

fn join_and_destroy_thread( thread_handle handle ) unsafe
{
	halt if( unsafe( ::pthread_join( handle, nullptr</$(byte8)/>() ) ) != 0 );
}

} // namespace thread_impl

} // namespace us
