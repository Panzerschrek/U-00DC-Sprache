import "../../imports/memory.u"
import "../../imports/thread_impl.u"
import "../../imports/type_traits.u"
import "pthread.uh"

namespace ust
{

namespace thread_impl
{

static_assert( same_type</thread_id, pthread_t/>, "Types mismatch!" );
static_assert( same_type</thread_handle, pthread_t/>, "Types mismatch!" );

fn create_and_start_thread( thread_start_function func, $(byte8) arg ) unsafe : tup[ thread_handle, thread_id ]
{
	unsafe
	{
		var $(pthread_attr_t) attr= zero_init;
		var pthread_t mut handle(0);

		halt if( ::pthread_create( handle, attr, func, arg ) != 0 );

		// In "pthread" library id=handle.
		var tup[ thread_handle, thread_id ] res[ handle, handle ];
		return res;
	}
}

fn join_and_destroy_thread( thread_handle handle ) unsafe
{
	halt if( unsafe( ::pthread_join( handle, nullptr</$(byte8)/>() ) ) != 0 );
}

fn get_current_thread_id() : thread_id
{
	return unsafe( pthread_self() );
}

fn get_number_of_available_cpus() : u32
{
	return u32( unsafe( ::sysconf( i32( ü_SC_NPROCESSORS_ONLN ) ) ) );
}

} // namespace thread_impl

} // namespace ust

fn nomangle sysconf( i32 ü__name ) unsafe : i64;

var u32 ü_SC_NPROCESSORS_ONLN =
	( ust::constexpr_string_equals( compiler::target::vendor, "apple" ) || ust::constexpr_string_starts_with( compiler::target::os, "freebsd" )
		? 58u
		: 84u );
