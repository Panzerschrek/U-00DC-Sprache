import "/optional.u"
import "logger.uh"

namespace BK
{

// Load shared library without later possibility to unload it.
// This means any symbols after a particular library loading are available until the process ends.
fn LoadSharedLibrary( Logger &mut logger, ust::string_view8 path ) : ust::optional</SharedLibrary/>;

// A wrapper class for loading shared library symbols.
// Library loaded is not unloaded even if this instance is destroyed.
class SharedLibrary
{
public:
	fn constructor( $(byte8) system_handle ) unsafe
		( system_handle_= system_handle )
	{}

	fn LoadSymbol( imut this, Logger &mut logger, ust::string_view8 symbol_name ) : $(byte8);

private:
	$(byte8) system_handle_;
}

} // namespace BK
