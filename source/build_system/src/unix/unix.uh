// This file contains some definitions from UNIX (pparticulary Linux) headers, which are used inside the build system.
// These definitions are manually copypasted from the result of the CPPHeaderConverter tool execution and somewhat tweaked.

fn nomangle close( i32 ü__fd ) unsafe : i32;
fn nomangle dlerror() unsafe : $(char8);
fn nomangle dlopen( $(char8) ü__file, i32 ü__mode ) unsafe : $(byte8);
fn nomangle dlsym( $(byte8) ü__handle, $(char8) ü__name ) unsafe : $(byte8);
fn nomangle fcntl( i32 ü__fd, i32 ü__cmd, i32 flags ) unsafe : i32;
fn nomangle fstat( i32 ü__fd, $(stat_) ü__buf ) unsafe : i32;
fn nomangle lstat( $(char8) ü__file, $(stat_) ü__buf ) unsafe : i32;
fn nomangle mkdir( $(char8) ü__path, ü__mode_t ü__mode ) unsafe : i32;
fn nomangle open( $(char8) ü__file, i32 ü__oflag, ü__mode_t ü__mode ) unsafe : i32;
fn nomangle pipe( $(i32) ü__pipedes ) unsafe : i32;
fn nomangle posix_spawn( $(pid_t) ü__pid, $(char8) ü__path, $(posix_spawn_file_actions_t) ü__file_actions, $(posix_spawnattr_t) ü__attrp, $($(char8)) ü__argv, $($(char8)) ü__envp ) unsafe : i32;
fn nomangle posix_spawn_file_actions_addclose( $(posix_spawn_file_actions_t) ü__file_actions, i32 ü__fd ) unsafe : i32;
fn nomangle posix_spawn_file_actions_adddup2( $(posix_spawn_file_actions_t) ü__file_actions, i32 ü__fd, i32 ü__newfd ) unsafe : i32;
fn nomangle posix_spawn_file_actions_addopen( $(posix_spawn_file_actions_t) ü__file_actions, i32 ü__fd, $(char8) ü__path, i32 ü__oflag, mode_t ü__mode ) unsafe : i32;
fn nomangle posix_spawn_file_actions_destroy( $(posix_spawn_file_actions_t) ü__file_actions ) unsafe : i32;
fn nomangle posix_spawn_file_actions_init( $(posix_spawn_file_actions_t) ü__file_actions ) unsafe : i32;
fn nomangle posix_spawnattr_destroy( $(posix_spawnattr_t) ü__attr ) unsafe : i32;
fn nomangle posix_spawnattr_init( $(posix_spawnattr_t) ü__attr ) unsafe : i32;
fn nomangle posix_spawnattr_setflags( $(posix_spawnattr_t) ü_attr, i16 ü__flags ) unsafe : i32;
fn nomangle posix_spawnp( $(pid_t) ü__pid, $(char8) ü__file, $(posix_spawn_file_actions_t) ü__file_actions, $(posix_spawnattr_t) ü__attrp, $($(char8)) ü__argv, $($(char8)) ü__envp ) unsafe : i32;
fn nomangle ppoll( $(pollfd) ü__fds, nfds_t ü__nfds, $(timespec) ü__timeout, $(ü__sigset_t) ü__ss ) unsafe : i32;
fn nomangle read( i32 ü__fd, $(byte8) ü__buf, size_t ü__nbytes ) unsafe : ssize_t;
fn nomangle readlink( $(char8) ü__path, $(char8) ü__buf, size_t ü__len ) unsafe : ssize_t;
fn nomangle sendfile( i32 ü__out_fd, i32 ü__in_fd, $(off_t) ü__offset, size_t ü__count ) unsafe : ssize_t;
fn nomangle waitpid( ü__pid_t ü__pid, $(i32) ü__stat_loc, i32 ü__options ) unsafe : ü__pid_t;
fn nomangle write( i32 ü__fd, $(byte8) ü__buf, size_t ü__n ) unsafe : ssize_t;

struct pollfd ordered
{
	i32 fd;
	i16 events;
	i16 revents;
}

struct posix_spawnattr_t ordered
{
	i16 ü__flags;
	pid_t ü__pgrp;
	sigset_t ü__sd;
	sigset_t ü__ss;
	sched_param ü__sp;
	i32 ü__policy;
	[ i32, 16u ] ü__pad;
}

struct posix_spawn_file_actions_t ordered
{
	i32 ü__allocated;
	i32 ü__used;
	$(ü__spawn_action_) ü__actions;
	[ i32, 16u ] ü__pad;
}

struct sched_param ordered
{
	i32 sched_priority;
}

// TODO - adopt this structure for 32-bit code and non-GNU/Linux systems (GNU/Hurd, OS X, FreeBSD).
struct stat_ ordered
{
	ü__dev_t st_dev;
	ü__ino_t st_ino;
	ü__nlink_t st_nlink;
	ü__mode_t st_mode;
	ü__uid_t st_uid;
	ü__gid_t st_gid;
	i32 ü__pad0;
	ü__dev_t st_rdev;
	ü__off_t st_size;
	ü__blksize_t st_blksize;
	ü__blkcnt_t st_blocks;
	timespec st_atim;
	timespec st_mtim;
	timespec st_ctim;
	[ ü__syscall_slong_t, 3u ] ü__glibc_reserved;
}

struct timespec ordered
{
	ü__time_t tv_sec;
	ü__syscall_slong_t tv_nsec;
}

struct ü__sigset_t ordered
{
	[ u64, 16u ] ü__val;
}

struct ü__spawn_action_ ordered
{
	fn constructor() : void= delete;
}

type mode_t = ü__mode_t;
type nfds_t = u64;
type off_t = ü__off_t;
type pid_t = ü__pid_t;
type sigset_t = ü__sigset_t;
type size_t = size_type;
type ssize_t = ü__ssize_t;
type ü__blkcnt_t = i64;
type ü__blksize_t = i64;
type ü__dev_t = u64;
type ü__gid_t = u32;
type ü__ino_t = u64;
type ü__mode_t = u32;
type ü__nlink_t = u64;
type ü__off_t = i64;
type ü__pid_t = i32;
type ü__ssize_t = ssize_type;
type ü__syscall_slong_t = i64;
type ü__time_t = i64;
type ü__uid_t = u32;

auto constexpr ENOENT = 2;
auto constexpr EEXIST = 17;
auto constexpr ERANGE = 34;

auto constexpr FD_CLOEXEC = 1;

auto constexpr F_SETFD = 2;

auto constexpr O_RDONLY = 0;
auto constexpr O_WRONLY = 1;
auto constexpr O_CREAT = 64;
auto constexpr O_TRUNC = 512;

auto constexpr POLLIN = 1;
auto constexpr POLLPRI = 2;
auto constexpr POLLOUT = 4;

auto constexpr POSIX_SPAWN_USEVFORK = 64;

auto constexpr RTLD_LAZY = 1;
auto constexpr RTLD_NOW = 2;
auto constexpr RTLD_GLOBAL = 256;
auto constexpr RTLD_NODELETE = 4096;

auto constexpr S_IFMT = 61440;
auto constexpr S_IFDIR = 16384;

auto constexpr STDIN_FILENO = 0;
auto constexpr STDOUT_FILENO = 1;
auto constexpr STDERR_FILENO = 2;
