import "/path.u"
import "/vector.u"

namespace BK
{

// Split into components - for each directory and (possible) file name at end.
// Preserves "." and ".." as components.
// Doesn't preserve initial "/" as separate component, so result for "foo/bar" and "/foo/bar" is the same.
fn SplitPathIntoComponents( ust::filesystem_path_view path )
	: ust::vector</ust::filesystem_path_view/> @( ust::reference_notation::return_inner_references::param0_inner_reference0 );

// Replaces separators with preferrable, removes duplicated separators, removes trailing separator (if present), performs (if possible) relative paths resolution.
fn NormalizePath( ust::filesystem_path_view path ) : ust::filesystem_path;

// Returns last path component - file name or directory.
fn GetLastPathComponent( ust::filesystem_path_view path )
	: ust::filesystem_path_view @( ust::reference_notation::return_inner_references::param0_inner_reference0 );

// Returns path without file extension or original path if no file extension found.
fn StripExtension( ust::filesystem_path_view path )
	: ust::filesystem_path_view @( ust::reference_notation::return_inner_references::param0_inner_reference0 );

} // namespace BK
