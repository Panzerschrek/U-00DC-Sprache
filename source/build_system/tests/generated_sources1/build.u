import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	var ust::string8 generated_source= "foo.u";

	auto& contents= "import \"/generated_sources1/foo.uh\"\nfn Foo() : i32 { return 678123; }";

	var BK::BuildTarget mut target
	{
		.name= "generated_sources1",
		.target_type= BK::BuildTargetType::Executable,
		.source_files= ust::make_array</ust::string8/>( "main.u" ),
		.generated_source_files= ust::make_array( generated_source ),
	};

	auto mut out_file= ust::concat( build_system_interface.GetCurrentPackageBuildTargetGeneratedSourcesDirectory( target.name ), "/", generated_source );

	var BK::CustomBuildStep mut generate_source_step
	{
		.comment= "generate " + generated_source,
		.output_files= ust::make_array( out_file ),
		.command= BK::CustomBuildStep::GenerateFileCommand{ .destination_path= out_file, .contents= contents, },
	};

	return BK::PackageInfo
	{
		.build_targets= ust::make_array( move(target) ),
		.custom_build_steps= ust::make_array( move(generate_source_step) ),
	};
}
