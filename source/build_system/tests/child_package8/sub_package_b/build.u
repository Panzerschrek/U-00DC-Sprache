import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	ust::ignore_unused( build_system_interface );

	// Depend on sibling package.
	var BK::PackageName sub_package_c{ .path= "../sub_package_c" };

	var BK::BuildTarget mut target
	{
		.name= "lib_b",
		.target_type = BK::BuildTargetType::Library,
		.source_files= ust::make_array</ust::string8/>( "src/lib_b.u" ),
		.public_include_directories= ust::make_array</ust::string8/>( "imports" ),
		.private_dependencies= ust::make_array( BK::DependencyName{ .name= "lib_c", .package_name= sub_package_c } ),
	};

	return BK::PackageInfo
	{
		.build_targets= ust::make_array( move(target) ),
		.package_dependencies= ust::make_array( BK::PackageDependency{ .name= sub_package_c } )
	};
}
