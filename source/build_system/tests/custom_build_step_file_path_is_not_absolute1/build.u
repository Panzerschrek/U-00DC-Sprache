import "/path_utils.u"
import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	auto mut in_file= ust::path::join( build_system_interface.GetCurrentPackageSourceDirectory(), "some_file.txt" );
	// Error here - output file path is not absolute.
	var ust::string8 mut out_file= "some_file_multiplied.txt";

	auto mut program= build_system_interface.GetConfigurationOption( "test_file_generation_tool" ).try_deref();

	var BK::CustomBuildStep mut step
	{
		.comment= "mutlitpy abc",
		.input_files= ust::make_array( in_file ),
		.output_files= ust::make_array( out_file ),
		.command= BK::CustomBuildStep::ExeCommand
		{
			.exe_path= move(program),
			.command_line= ust::make_array( move(in_file), "-o", move(out_file), "-n", "4" ),
		}
	};
	return BK::PackageInfo { .custom_build_steps= ust::make_array( move(step) ), };
}
