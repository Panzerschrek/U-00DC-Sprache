import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	ust::ignore_unused( build_system_interface );

	// The same public include directory is used in two targets.

	var BK::BuildTarget mut target_a{ .name= "target_a", .target_type = BK::BuildTargetType::Executable };
	target_a.source_files.push_back( "target_a/a.u" );
	target_a.public_include_directories.push_back( "include_dir" );

	var BK::BuildTarget mut target_b{ .name= "target_b", .target_type = BK::BuildTargetType::Executable };
	target_b.source_files.push_back( "target_b/b.u" );
	target_b.public_include_directories.push_back( "include_dir" );

	return BK::PackageInfo{ .build_targets= ust::make_array( move(target_a), move(target_b) ) };
}
