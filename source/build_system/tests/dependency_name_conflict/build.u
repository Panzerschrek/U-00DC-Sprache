import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	ust::ignore_unused( build_system_interface );

	var BK::PackageName sub_package_a{ .path= "sub_package_a" };
	var BK::PackageName sub_package_b{ .path= "sub_package_b" };

	var BK::BuildTarget mut target
	{
		.name= "exe",
		.target_type = BK::BuildTargetType::Executable,
		.source_files= ust::make_array</ust::string8/>( "exe/main.u" ),
		// Error here - for now we can't have dependencies with identical name, even if they are from different packages.
		.private_dependencies=
			ust::make_array(
				BK::DependencyName{ .name= "lib", .package_name= sub_package_a },
				BK::DependencyName{ .name= "lib", .package_name= sub_package_b })
	};

	return BK::PackageInfo
	{
		.build_targets= ust::make_array( move(target) ),
		.package_dependencies= ust::make_array</BK::PackageDependency/>( sub_package_a, sub_package_b )
	};
}
