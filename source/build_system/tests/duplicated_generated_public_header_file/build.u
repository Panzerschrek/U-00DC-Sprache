import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	ust::ignore_unused( build_system_interface );

	var BK::BuildTarget mut target{ .target_type = BK::BuildTargetType::Library };
	// Add the same source file two times.
	target.generated_public_header_files.push_back( "some.uh" );
	target.generated_public_header_files.push_back( "some.uh" );
	// Add the same file two times, with non-identical path.
	target.generated_public_header_files.push_back( "dir/other.uh" );
	target.generated_public_header_files.push_back( "dir\\other.uh" );
	target.name= "hello_world";

	return BK::PackageInfo{ .build_targets= ust::make_array( move(target) ) };
}
