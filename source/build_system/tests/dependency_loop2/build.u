import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	ust::ignore_unused( build_system_interface );

	// Loop of private dependencies.

	var BK::BuildTarget mut lib_a
	{
		.name= "lib_a",
		.target_type = BK::BuildTargetType::Library,
		.source_files= ust::make_array</ust::string8/>( "lib_a/lib_a.u" ),
		.private_dependencies= ust::make_array( BK::DependencyName{ .name= "lib_b" } ),
	};

	var BK::BuildTarget mut lib_b
	{
		.name= "lib_b",
		.target_type = BK::BuildTargetType::Library,
		.source_files= ust::make_array</ust::string8/>( "lib_b/lib_b.u" ),
		.private_dependencies= ust::make_array( BK::DependencyName{ .name= "lib_a" } ),
	};

	return BK::PackageInfo{ .build_targets= ust::make_array( move(lib_a), move(lib_b) ) };
}
