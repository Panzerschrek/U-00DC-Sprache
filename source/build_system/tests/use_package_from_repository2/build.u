import "/build_system.uh"

fn GetPackageInfo( BK::BuildSystemInterface &mut build_system_interface ) : BK::PackageInfo
{
	ust::ignore_unused( build_system_interface );

	// Depend on two global packages.

	var BK::PackageName sub_package_a
	{
		.name_base= BK::GlobalVersionedPackageName{ .name= "two_returner", .version(0u, 1u) },
	};

	var BK::PackageName sub_package_b
	{
		.name_base= BK::GlobalVersionedPackageName{ .name= "integer_adder", .version( 1u, 2u, 3u, 4u ) },
		.path= "impl",
	};

	var BK::BuildTarget mut target
	{
		.name= "exe",
		.target_type = BK::BuildTargetType::Executable,
		.source_files= ust::make_array</ust::string8/>( "exe/main.u" ),
		.private_dependencies= ust::make_array(
			BK::DependencyName{ .name= "two_returner", .package_name= sub_package_a },
			BK::DependencyName{ .name= "integer_adder", .package_name= sub_package_b } )
	};

	return BK::PackageInfo
	{
		.build_targets= ust::make_array( move(target) ),
		.package_dependencies= ust::make_array(
			BK::PackageDependency{ .name= sub_package_a },
			BK::PackageDependency{ .name= sub_package_b } )
	};
}
