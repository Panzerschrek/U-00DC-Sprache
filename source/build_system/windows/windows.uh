// This file contains some definitions from windows headers, which are used inside the build system.
// These definitions are manually copypasted from the result of the CPPHeaderConverter tool execution and somewhat tweaked.

fn nomangle CloseHandle( HANDLE hObject ) unsafe call_conv( "system" ) : BOOL;

fn nomangle CreateDirectoryA( LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes ) unsafe call_conv( "system" ) : BOOL;

fn nomangle CreateFileA( LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile ) unsafe call_conv( "system" ) : HANDLE;

fn nomangle GetLastError() unsafe call_conv( "system" ) : DWORD;

fn nomangle GetProcAddress( HMODULE hModule, LPCSTR lpProcName ) unsafe call_conv( "system" ) : $(byte8);

fn nomangle LoadLibraryA( LPCSTR lpLibFileName ) unsafe call_conv( "system" ) : HMODULE;

fn nomangle WriteFile( HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped ) unsafe call_conv( "system" ) : BOOL;

struct HINSTANCE__ ordered
{
	i32 unused;
}

struct 端_OVERLAPPED ordered
{
	// For now disable it.
	fn constructor() = delete;
}

struct 端_SECURITY_ATTRIBUTES ordered
{
	DWORD nLength;
	LPVOID lpSecurityDescriptor;
	BOOL bInheritHandle;
}

type BOOL = i32;
type CHAR = char8;
type DWORD = u32;
type HANDLE = $(byte8);
type HINSTANCE = $(HINSTANCE__);
type HMODULE = HINSTANCE;
type LPCSTR = $(CHAR);
type LPCVOID = $(byte8);
type LPDWORD = $(DWORD);
type LPOVERLAPPED = $(端_OVERLAPPED);
type LPSECURITY_ATTRIBUTES = $(端_SECURITY_ATTRIBUTES);
type LPVOID = $(byte8);
type ULONG_PTR = size_type;

auto constexpr ERROR_ALREADY_EXISTS = 183;
auto constexpr FILE_SHARE_READ = 1;
auto constexpr GENERIC_READ = 0x80000000u;
auto constexpr GENERIC_WRITE = 0x40000000u;
auto constexpr GENERIC_EXECUTE = 0x20000000u;
auto constexpr GENERIC_ALL = 0x10000000u;
auto constexpr CREATE_ALWAYS = 2;
