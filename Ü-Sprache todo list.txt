Here placed language features for future development of language itself and
compiler. Features grouped and sorted by priority inside each group.
When feature was implemented, delete it from list.

Common:
*) public/private/protected for class/struct members
*) sizeof operator
*) raw_pointer
*) Inheritance and virtual methods
*) Unsafe
*) Continious initializer for arrays
*) Uninitialized initializer
*) array_view, array view take operator
*) Type conversions
*) Overloading of operator ()
*) Dereference operator - for pointer-like classes

References:
*) References inside struct/class
*) Tags for struct/class references
*) Separate references checking for struct members - add possibility to have two mutable references
	for two different members of one struct value.

Templates:
*) Default template arguments for short type template form
*) Type templates overloading
*) enable_if for templates
*) Function templates
*) Variadic templates

Standart library:
*) vector
*) unique_ptr
*) optional
*) shared_ptr

Compiler:
*) Standartized entry point, such "main" in some languages
*) Precompiled modules
