// Extern C++ function
fn CallCPP( i32 x );

// Function, exported to C++ module
fn Do( i32 x ) : f64
{
	CallCPP( x );
	return 1.251;
}

namespace NameSpace
{
	fn Nested()
	{
	}

	struct S{}
}

fn TakeS( NameSpace::S &imut s )
{
}

struct TheClass
{
	fn Method( this );
	fn ImutMethod( imut this, TheClass& other );

	fn StaticMethod();
	fn StaticMethod2();
}

fn TheClass::Method( this )
{
	ImutMethod( this );
}

fn TheClass::StaticMethod()
{
	StaticMethod2();
}

fn U32ToStr( u32 x, [ i8, 64 ]& out_str )
{
	auto imut zero_char= 48u;
	if( x == 0u )
	{
		out_str[0u]= i8(zero_char);
		out_str[1u]= 0i8;
		return;
	}
	var u32 dst= 0u;
	var u32 div= 1000000000u;

	while( div > x )
	{
		div/= 10u;
	}

	while( div > 0u )
	{
		auto imut digit= x / div;
		out_str[dst]= i8( digit + zero_char );
		++dst;
		x-= digit * div;
		div/= 10u;
	}
	out_str[dst]= 0i8;
}
